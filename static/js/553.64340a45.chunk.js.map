{"version":3,"file":"static/js/553.64340a45.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/FetchApi.jsx","components/Searchbar/Searchbar.js","views/MoviesView/MoviesView.js"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '0b2bea78971d650356cc30f3af111630';\n\nasync function fetchMovies(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchTrending() {\n    return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n}\n\n\nexport function fetchMovieDetails(movieId) {\n    return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${KEY}`);\n}\n\nexport function fetchMovieCredits(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return fetchMovies(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n}\n\nexport function fetchSearchMovie(searchQuery) {\n  return fetchMovies(\n    `${BASE_URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n}","import {useState} from \"react\";\n\n\nfunction Searchbar({ onSubmit }) {\n  const [filmRequest, setFilmRequest] = useState('');\n\n  const handleInputChange = event => {\n    setFilmRequest(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n      if (filmRequest.trim() === '') {\n          alert('Enter the name of the film');\n            return;\n      };\n\n      onSubmit(filmRequest);\n        setFilmRequest('');\n    };\n\n    return (\n      <form  onSubmit={handleSubmit}>            \n            <input\n               \n                type=\"text\"            \n                placeholder=\"Search film\"\n                value={filmRequest}\n                onChange={handleInputChange}\n            />\n            <button type=\"submit\"  >\n            <span >Search</span>\n            </button>\n        </form>  \n    )\n}\n\n\nexport default Searchbar;","import { useState, useEffect } from 'react';\nimport { Link,useSearchParams,useLocation } from 'react-router-dom';\nimport { fetchSearchMovie } from '../../services/FetchApi';\nimport Searchbar from 'components/Searchbar/Searchbar';\n\nfunction MoviesView() {\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState( searchParams.get('query') ?? '');\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n\n  const handleFormSubmit = searchQuery => {\n    setSearchQuery(searchQuery);\n    setSearchParams({ query: searchQuery });\n    setMovies([]);\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    fetchSearchMovie(searchQuery).then(response=>setMovies(response.results));\n  }, [searchQuery]);\n\n\n    return (\n        <>\n            <Searchbar onSubmit={handleFormSubmit} />\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link to={`${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n        </>\n    )\n};\n\nexport default MoviesView;"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","KEY","fetchMovies","url","config","fetch","response","ok","json","Error","fetchTrending","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","fetchSearchMovie","searchQuery","onSubmit","useState","filmRequest","setFilmRequest","event","preventDefault","trim","alert","type","placeholder","onChange","currentTarget","toLowerCase","useSearchParams","searchParams","setSearchParams","get","setSearchQuery","movies","setMovies","location","useLocation","useEffect","results","query","map","movie","to","id","state","from","title"],"sourceRoot":""}